# Administrator
type Admin {
  # The ID of an object
  id: ID!
  name: String
  email: String
}

# Grade received on a quiz
type Grade {
  lesson: String
  score: Int
}

# Your Root Mutation
type Mutation {
  createStudent(name: String, email: String): Student
  createTeacher(name: String, email: String): Teacher
  createAdmin(name: String, email: String): Admin
  deleteAdmin(id: ID!): Admin
  addGrade(id: String, lesson: String, score: Int): Student
  assignStudentToTeacher(studentID: ID, teacherID: ID): Student
}

# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

# Your Root Query
type Query {
  # Fetches an object given its ID
  node(
    # The ID of an object
    id: ID!
  ): Node
  students: [Student]
  teachers: [Teacher]
  admins: [Admin]
}

# Self Descriptive
type Student implements Node {
  # The ID of an object
  id: ID!
  name: String
  email: String
  teacher: Teacher
  grades: [Grade]
}

# Teacher
type Teacher implements Node {
  # The ID of an object
  id: ID!
  name: String
  email: String

  # Students that the teacher teachers
  students: [Student]
}
